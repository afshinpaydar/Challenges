apiVersion: apps/v1
kind: Deployment
metadata:
  name: traefik-jobs-deployment
  labels:
    app: traefik-jobs
    helmsman: "dcc9c530767c102764d45d621fc92317"
spec:
  replicas: 1
  selector:
    matchLabels:
      app: traefik-jobs
  template:
    metadata:
      labels:
        app: traefik-jobs
        helmsman: "dcc9c530767c102764d45d621fc92317"
    spec:
      containers:
      - name: ubuntu
        image: ubuntu:18.04
        command: ["sh","-c","while true; do ls; sleep 30; done"]
        args:
          - while true; do
              sleep 10;
            done
        securityContext:
          capabilities:
            add:
              - SYS_PTRACE
        stdin: true
        tty: true
      - name: traefik-jobs
        securityContext:
          capabilities:
            add:
              - SYS_PTRACE
        stdin: true
        tty: true
        image: traefik/jobs
        
        ports:
          - containerPort: 8888
---
apiVersion: v1
kind: Service
metadata:
  name: traefik-jobs
  labels:
    app: traefik-jobs
    helmsman: "dcc9c530767c102764d45d621fc92317"
spec:
  type: LoadBalancer
  selector:
    app: traefik-jobs
  ports:
    - protocol: TCP
      port: 8888
      targetPort: 8888
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: ingress-traefik-jobs
  labels:
    app: traefik-jobs
    helmsman: "dcc9c530767c102764d45d621fc92317"
  annotations:
    kubernetes.io/ingress.class: nginx
spec:
  rules:
  - host: "jobs.afshinpaydar.com"
    http:
      paths:
      - pathType: Prefix
        path: "/"
        backend:
          service:
            name: traefik-jobs
            port:
              number: 8888
  tls:
    - hosts:
      - jobs.afshinpaydar.com
      secretName: jobs-tls
---
apiVersion: v1
kind: Secret
metadata:
  name: jobs-tls
  labels:
    app: traefik-jobs
    helmsman: "dcc9c530767c102764d45d621fc92317"
  namespace: jobs
data:
  tls.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUZNRENDQkJpZ0F3SUJBZ0lTQTUzNDFuejVyUEMwSkpyRjgrZ0xvTGRETUEwR0NTcUdTSWIzRFFFQkN3VUEKTURJeEN6QUpCZ05WQkFZVEFsVlRNUll3RkFZRFZRUUtFdzFNWlhRbmN5QkZibU55ZVhCME1Rc3dDUVlEVlFRRApFd0pTTXpBZUZ3MHlNREV5TVRFeE5ERXhNamhhRncweU1UQXpNVEV4TkRFeE1qaGFNQ0F4SGpBY0JnTlZCQU1UCkZXcHZZbk11WVdaemFHbHVjR0Y1WkdGeUxtTnZiVENDQVNJd0RRWUpLb1pJaHZjTkFRRUJCUUFEZ2dFUEFEQ0MKQVFvQ2dnRUJBTEpBRXd6cTNOWXNEbGdEdVlXdUpLQU1DSEhXNWVMTEh4QTV3SWl2aHNLbVpmUEdjNEVzREczbQpGTGprWlAzKzhrRTZrYXBONW5jMWs4V1dlakwxUHlZbThTQ1NJUEFaV2IxSHFNTjN2REhEUnU1TWx3SGxmSlcxCnJVL3ZLcWltcDY1VGtaMUtScmkvWm15K1p2ZEY4cGw5cWQ0RDl5U3pXKzgvVlVPclNKNEhuOWZBRm9ldk1mZ3AKWDFJMHpQWUk4V05HbHFoYTN4d1FTR3BnSmV4WjlzNy9JakJIRDJDenExTnhXSFh6N1NVaWd3Q1pMeC8vZFZxbQpyNG5INjhNRE90elRBMGtZZDRPK05RRmVYbG9KMlNveU9oay9RcWpjRU1iTVcwSTkxK0FMWnR5WXVobDB2bnk5CmNMa0VpUDJybHhCRFpKeG1GNTdVbUl6ZEZ0YmNwM1VDQXdFQUFhT0NBbEF3Z2dKTU1BNEdBMVVkRHdFQi93UUUKQXdJRm9EQWRCZ05WSFNVRUZqQVVCZ2dyQmdFRkJRY0RBUVlJS3dZQkJRVUhBd0l3REFZRFZSMFRBUUgvQkFJdwpBREFkQmdOVkhRNEVGZ1FVZWY1L01GRGZkRU5CVFd4ZTJUOVlheDdDcVJFd0h3WURWUjBqQkJnd0ZvQVVGQzZ6CkY3ZFlWc3V1VUFsQTVoK3ZuWXNVd3NZd1ZRWUlLd1lCQlFVSEFRRUVTVEJITUNFR0NDc0dBUVVGQnpBQmhoVm8KZEhSd09pOHZjak11Ynk1c1pXNWpjaTV2Y21jd0lnWUlLd1lCQlFVSE1BS0dGbWgwZEhBNkx5OXlNeTVwTG14bApibU55TG05eVp5OHdJQVlEVlIwUkJCa3dGNElWYW05aWN5NWhabk5vYVc1d1lYbGtZWEl1WTI5dE1Fd0dBMVVkCklBUkZNRU13Q0FZR1o0RU1BUUlCTURjR0N5c0dBUVFCZ3Q4VEFRRUJNQ2d3SmdZSUt3WUJCUVVIQWdFV0dtaDAKZEhBNkx5OWpjSE11YkdWMGMyVnVZM0o1Y0hRdWIzSm5NSUlCQkFZS0t3WUJCQUhXZVFJRUFnU0I5UVNCOGdEdwpBSFlBbENDOEhvN1ZqV3lJY3grQ2l5SXNEZEhhVFY1c1Q1UTlZZHRPTDFoTm9zSUFBQUYyVWx0ZXNnQUFCQU1BClJ6QkZBaUVBeWo2QVNBdnlhc29NYkpGb3l0RCtHaEVrRkQwdERqdHVmZTN6bXdmQStNNENJQi80VGc0TU51NXUKRStUQkZ3d3R1QldZTlFHMkZkWjY3Q1drMFJqS0MvNjJBSFlBOWx5VUw5RjNNQ0lVVkJnSU1KUldqdU5ORXhregp2OThNTHlBTHpFN3haT01BQUFGMlVsdGV0d0FBQkFNQVJ6QkZBaUVBNTJHTGpUcWlZZXVOYnNHaDl5NEp6QnhWCjhYd3pMc2lvZFVFQndNblNWQThDSUhlM0lWN3h5ZEo4VTZHSXI5cFM2ZzAyWldQeFlLS3hvZ28xdlZ2dHpYOUEKTUEwR0NTcUdTSWIzRFFFQkN3VUFBNElCQVFDNkZja01UZ3VYZFVFdGVlOTJwVjNzZ0lxV1ByRnNJRmtjczNzcQp5N1MyZDc0Nk5yWks5NWhXOVU5RFFEK3BkNDM2NkZpbHBiOUZYOFg1amdkVVp5T1FGTkYwbCtHVjBEcXplSTJyClg5eHkrcmd6ZWxKNW5KTHkzQ2lFSVQ2dWl3VDE0U3RBZmhGaGZYam9NU0ZrR084RG8xcVBoK285S0lLcktHd1UKYzhpQ1hBMlI2aTRveks2T1p3RnIvNU1lRmdEV1plbFFWd1hhcTBocm8zUFlSSjNhLzlBaUlDalVQQkVrYS8xZQpGWU9uaUk1a1dUR1lQbG1ySGlxdFM5NmxONEFBc0o0SzdkUjNadVVtbm9HbHlhanFxVlhTQWJIN0gwUWRDT09ECkVsRDIwZ25FWkczTDZNaW90eW1lVWRreGdOK0k4Y09hSjIzSVhiVnRZR2lHWFBXYQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCi0tLS0tQkVHSU4gQ0VSVElGSUNBVEUtLS0tLQpNSUlFWlRDQ0EwMmdBd0lCQWdJUVFBRjFCSU1VcE1naGpJU3BEQmJOM3pBTkJna3Foa2lHOXcwQkFRc0ZBREEvCk1TUXdJZ1lEVlFRS0V4dEVhV2RwZEdGc0lGTnBaMjVoZEhWeVpTQlVjblZ6ZENCRGJ5NHhGekFWQmdOVkJBTVQKRGtSVFZDQlNiMjkwSUVOQklGZ3pNQjRYRFRJd01UQXdOekU1TWpFME1Gb1hEVEl4TURreU9URTVNakUwTUZvdwpNakVMTUFrR0ExVUVCaE1DVlZNeEZqQVVCZ05WQkFvVERVeGxkQ2R6SUVWdVkzSjVjSFF4Q3pBSkJnTlZCQU1UCkFsSXpNSUlCSWpBTkJna3Foa2lHOXcwQkFRRUZBQU9DQVE4QU1JSUJDZ0tDQVFFQXV3SVZLTXoyb0pUVER4THMKalZXU3cvaUM4Wm1tZWtLSXAxMG1xclVydWNWTXNhK09hL2wxeUtQWEQwZVVGRlUxVjR5ZXFLSTVHZldDUEVLcApUbTcxTzhNdTI0M0FzRnp6V1RqbjdjOXA4Rm9MRzc3QWxDUWxoL28zY2JNVDV4eXM0WnZ2MitRN1JWSkZscW5CClU4NDB5Rkx1dGE3dGo5NWdjT0tsVkt1MmJRNlhwVUEwYXl2VHZHYnJaalI4K211TGoxY3BtZmd3RjEyNmNtLzcKZ2NXdDBvWllQUmZINXdtNzhTdjNodHpCMm5GZDFFYmp6SzBsd1lpOFlHZDFaclB4R1BlaVhPWlQvenFJdGtlbAoveE1ZNnBnSmR6K2RVL25QQWVYMXBuQVhGSzlqcFArWnM1T2QzRk9uQnY1SWhSMmhhYTRsZGJzVHpGSUQ5ZTFSCm9ZdmJGUUlEQVFBQm80SUJhRENDQVdRd0VnWURWUjBUQVFIL0JBZ3dCZ0VCL3dJQkFEQU9CZ05WSFE4QkFmOEUKQkFNQ0FZWXdTd1lJS3dZQkJRVUhBUUVFUHpBOU1Ec0dDQ3NHQVFVRkJ6QUNoaTlvZEhSd09pOHZZWEJ3Y3k1cApaR1Z1ZEhKMWMzUXVZMjl0TDNKdmIzUnpMMlJ6ZEhKdmIzUmpZWGd6TG5BM1l6QWZCZ05WSFNNRUdEQVdnQlRFCnA3R2tleXh4K3R2aFM1QjEvOFFWWUlXSkVEQlVCZ05WSFNBRVRUQkxNQWdHQm1lQkRBRUNBVEEvQmdzckJnRUUKQVlMZkV3RUJBVEF3TUM0R0NDc0dBUVVGQndJQkZpSm9kSFJ3T2k4dlkzQnpMbkp2YjNRdGVERXViR1YwYzJWdQpZM0o1Y0hRdWIzSm5NRHdHQTFVZEh3UTFNRE13TWFBdm9DMkdLMmgwZEhBNkx5OWpjbXd1YVdSbGJuUnlkWE4wCkxtTnZiUzlFVTFSU1QwOVVRMEZZTTBOU1RDNWpjbXd3SFFZRFZSME9CQllFRkJRdXN4ZTNXRmJMcmxBSlFPWWYKcjUyTEZNTEdNQjBHQTFVZEpRUVdNQlFHQ0NzR0FRVUZCd01CQmdnckJnRUZCUWNEQWpBTkJna3Foa2lHOXcwQgpBUXNGQUFPQ0FRRUEyVXpneWZXRWlEY3gyN3NUNHJQOGkydGlFbXhZdDBsK1BBSzNxQjhvWWV2TzRDNXo3MGtICmVqV0VIeDJ0YVBEWS9sYUJMMjEvV0tadU5UWVFISFBENWIxdFhnSFhibkw3S3FDNDAxZGs1VnZDYWRUUXN2ZDgKUzhNWGpvaHljOXo5L0cyOTQ4a0xqbUU2RmxoOWREWXJWWUE5eDJPK2hFUEdPYUVPYTFlZVB5bkJnUGF5dlVmTApxakJzdHpMaFdWUUxHQWtYWG1Ocys1Wm5QQnh6REpPTHhoRjJKSWJlUUFjSDVIMHRaclVsbzVaWXlPcUE3czlwCk81Yjg1bzNBTS9PSitDa3RGQlF0ZnZCaGNKVmQ5d3Zsd1Bzayt1eU95MkhJN21OeEtLZ3NCVHQzNzV0ZUEyVHcKVWRIa2hWTmNzQUtYMUg3R05OTE9FQURrc2Q4Nnd1b1h2Zz09Ci0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0=
  tls.key: LS0tLS1CRUdJTiBQUklWQVRFIEtFWS0tLS0tCk1JSUV2Z0lCQURBTkJna3Foa2lHOXcwQkFRRUZBQVNDQktnd2dnU2tBZ0VBQW9JQkFRQ3lRQk1NNnR6V0xBNVkKQTdtRnJpU2dEQWh4MXVYaXl4OFFPY0NJcjRiQ3BtWHp4bk9CTEF4dDVoUzQ1R1Q5L3ZKQk9wR3FUZVozTlpQRgpsbm95OVQ4bUp2RWdraUR3R1ZtOVI2akRkN3d4dzBidVRKY0I1WHlWdGExUDd5cW9wcWV1VTVHZFNrYTR2MlpzCnZtYjNSZktaZmFuZUEvY2tzMXZ2UDFWRHEwaWVCNS9Yd0JhSHJ6SDRLVjlTTk16MkNQRmpScGFvV3Q4Y0VFaHEKWUNYc1dmYk8veUl3Unc5Z3M2dFRjVmgxOCswbElvTUFtUzhmLzNWYXBxK0p4K3ZEQXpyYzB3TkpHSGVEdmpVQgpYbDVhQ2RrcU1qb1pQMEtvM0JER3pGdENQZGZnQzJiY21Mb1pkTDU4dlhDNUJJajlxNWNRUTJTY1poZWUxSmlNCjNSYlczS2QxQWdNQkFBRUNnZ0VBTTUxTUp1Um5OL2tmMmlxUjhQeWhERnNQb3U4b09BaTdJUGFvSXF3NDZHcEkKZ1ZOSXBQRzlVNkZaQk1UVjNacVNTWU1OSlBSVHROY2x5QVF2dEV2QmttbWFUdVVoZG9UUXNIZHNqZFZCQUdQYwpTU3FTVzNFNUp4eXBaOGtJWURlSnZIZmtaVmhackN0NEhDcnlJODMwVnEvRm5VMG1wbER0WVJURXVzaUJTWWpOCmQvc3g2d05Ec2IxVm5CWlhUSVJHanRxNGdKRVRRdkNzN01lZlhEL0hTblB1RjZ6SlRiQkluNDIyWXRIazdwY1gKQXpmWmtiVlpGdStuNGE2QUlmL3dWZGNMblpQay96bVBubDRXZkJFUkZSeHdsUFRHNFRQMEowd0tJQVpzVkZxcAphN1BiaWErbTB6L1RPMFlGdkZFVG9tMFl4WDNDK2JzeThxQ3NDd2RzUVFLQmdRRHBIR2xKb3lTeDBhVTNoK2pPClJzUWE2cGlNYjE1SEE1WmVlV2RCcklsR3hYa29zRFRwRWMwdE1IREF4RE5QNWRIaXdLc0pJV3hyck9MeE8wcW4KWlp2MjVQYk5EL21TNE1RTTdzc3NzeVliSzltVWlKRlc0MTFDSGgvanJNRE54M1RvdnJYV0t6MUlnR1EyWXhSMApyUnFDUmhvQlozUTRjY0Y4bEtmQ0wrSXlrUUtCZ1FERHdLaWVZRm1UaGFXOXFKbDJlbGIrakdsM0l4a2RSTkdaCnluM0hvNEVvSDBlZHpPeldLRm41L2FGazg0TXZIeTV5bUduQ29naXpUOVpMYTh4SDB6WHhCV1lua0lkeVN5MDMKNWJZTjNGNjkra2RiVDQ3bzN4TWNsbG9HSWMzZDUrQWpQanRKaERrWmlqM0JkcjM2TVlkYkJvR1JyM3NjNWxTbAo2RVNzV3RrUXBRS0JnUUNrUUpLbmdqNisxTHVYanpvbzdwQUxieldoN203OWxyZURSZ1BOc0tiaHFROGY3bGk1CnlRTkxUaENFb3pxTWw2RDJKMC9jbFNKeUZGV3NLRjBINm42a3p0eGZ6VnZMZEhodnJHcVl5bnFWTnFhUEZGTmsKWjd3MGRFbUFBUit4WDFNdkZBSElNSnR6MUpQSUJyUkpLaGU5cDJ0M2hjL01YY3M1M3Z6OXhRT2JJUUtCZ0NaZAo0MjZ2T2I5VlNZZmp2TGhoQUI0Q0RVWEJobEdiUkcyZEo0dnlld1VQSkcxRVZnTWZnNHNnNy9vbVZFYnZHSjV6ClN2OVAzTjZ3UGpNb0hMRFRMOVplbFlnWnBzSjdBNURhSUJXVlpLaGRucERDQmlPVVhWMlVCbTcvUHlkSUpFRWsKR0dDdlhyV254N1RjZmgzRWlXQUk1V3BWZDQ3UmdqUEdVM2Rva3ZUVkFvR0JBSlRtWkdQSVZmWXZxamF1RmFzcQpPSXd1Q2FBOGgwUE1TOVpGQ2VoMjQ4VXpPOTAvNW55SGw3eGxycmNUQ2xkSnpEUUNEaWwzN3g3dzZBaW1pTWkvCjlmM1VGQmI2cU4yMlNDNFVGYXp3NEppbEh3YVh2U0xlakVVWEFyckRRUjU3U3RwcDRQelVPeHc0aWxCYVNpek4Kek4yaiszT3pra0dpWk10QTNneHJTWTU1Ci0tLS0tRU5EIFBSSVZBVEUgS0VZLS0tLS0=
type: kubernetes.io/tls
---
apiVersion: v1
kind: Secret
metadata:
  name: helmsman
  labels:
    app: traefik-jobs
    helmsman: "dcc9c530767c102764d45d621fc92317"
  namespace: jobs
data:
  helmsman: dcc9c530767c102764d45d621fc92317
type: Opaque